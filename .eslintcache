[{"C:\\Users\\user\\react-todo-app-1\\react-todo-app\\src\\index.jsx":"1","C:\\Users\\user\\react-todo-app-1\\react-todo-app\\src\\components\\ToDo.jsx":"2","C:\\Users\\user\\react-todo-app-1\\react-todo-app\\src\\components\\ToDoItem.jsx":"3","C:\\Users\\user\\react-todo-app-1\\react-todo-app\\src\\components\\ToDoForm.jsx":"4","C:\\Users\\user\\react-todo-app-1\\react-todo-app\\src\\components\\TodoForm.jsx":"5","C:\\Users\\user\\react-todo-app-1\\react-todo-app\\src\\components\\Todoitem.jsx":"6"},{"size":606,"mtime":1608417611944,"results":"7","hashOfConfig":"8"},{"size":2903,"mtime":1608419180835,"results":"9","hashOfConfig":"8"},{"size":803,"mtime":1608418473026,"results":"10","hashOfConfig":"8"},{"size":1578,"mtime":1608418484401,"results":"11","hashOfConfig":"8"},{"size":1554,"mtime":1608421288967,"results":"12","hashOfConfig":"8"},{"size":803,"mtime":1608418473026,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"p7dwh0",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"17"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},"C:\\Users\\user\\react-todo-app-1\\react-todo-app\\src\\index.jsx",["33"],"import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport {Layout, Row, Col} from 'antd';\r\nimport { ToDo } from './components/ToDo';\r\n\r\nimport 'antd/dist/antd.css'\r\nimport './index.css';\r\n\r\n\r\nconst {Header, Footer, Content} = Layout;\r\n\r\nconst App = () => {\r\nreturn (\r\n    <Layout>\r\n        <Header></Header>\r\n        <Content>\r\n            <Row>\r\n                <Col span={12} offset={6}>\r\n               < ToDo/ >\r\n                </Col>\r\n            </Row>\r\n        </Content> \r\n        <footer></footer>  \r\n    </Layout>  \r\n)\r\n\r\n\r\n}\r\nReactDOM.render(<App/>, document.getElementById('root'));",["34","35"],"C:\\Users\\user\\react-todo-app-1\\react-todo-app\\src\\components\\ToDo.jsx",[],"C:\\Users\\user\\react-todo-app-1\\react-todo-app\\src\\components\\ToDoItem.jsx",["36","37"],"C:\\Users\\user\\react-todo-app-1\\react-todo-app\\src\\components\\ToDoForm.jsx",["38"],"import React from 'react';\r\nimport { Form, Input, Button} from 'antd';\r\nimport { render } from '@testing-library/react';\r\n\r\n\r\n\r\nconst  {Item}  = Form;\r\n\r\nexport const ToDoForm = (props) => {\r\n    const {onSubmit} = props;\r\n    \r\n    const finish = (values) => {\r\n        console.log('these are the values')\r\n        console.log(values)\r\n        onSubmit(values.name, values.title, values.description)\r\n    }\r\n\r\n    const fieldsValidationMessage = \"the name should not be lesss than 3 characters!\";\r\n    const titlecapValidationmessage = \"the title must begin with a capital letter!\";\r\n    \r\n\r\n\r\n    return(\r\n        <Form className={'todo-form'} layout={'inline'} onFinish={finish}>\r\n            <Item name = {'name'} label=\"Name\">\r\n                <Input\r\n                minLength = {3}\r\n                validationMessage = {fieldsValidationMessage} \r\n                />\r\n            </Item>\r\n            <Item name = {'title'} label = \"Title\">\r\n                <Input \r\n                minLength = {3}\r\n                pattern = {\"^[A-Z][A-Za-z]+\"}\r\n                validationMessage = {titlecapValidationmessage}\r\n                />\r\n            </Item>\r\n                <Item name = {'description'} label = \"Description\">\r\n                    <Input \r\n                    minLength = {3}\r\n                    validationMessage = {fieldsValidationMessage}\r\n                    />\r\n                </Item>\r\n\r\n            <Item>\r\n                <Button htmlType = {'submit'}>Add</Button>\r\n            </Item>\r\n\r\n\r\n            \r\n        </Form>\r\n    )\r\n\r\n    \r\n\r\n    \r\n    \r\n}\r\n\r\n",["39","40"],"C:\\Users\\user\\react-todo-app-1\\react-todo-app\\src\\components\\TodoForm.jsx",["41"],"import React from 'react';\r\nimport { Form, Input, Button} from 'antd';\r\nimport { render } from '@testing-library/react';\r\n\r\n\r\n\r\nconst  {Item}  = Form;\r\n\r\nexport const TodoForm = (props) => {\r\n    const {onSubmit} = props;\r\n    \r\n    const finish = (values) => {\r\n        console.log('these are the values')\r\n        console.log(values)\r\n        onSubmit(values.name, values.title, values.description)\r\n    }\r\n\r\n    const fieldsValidationMessage = \" name should be at least 3 characters!\";\r\n    const titlecapValidationmessage = \" title must begin with CAPS!\";\r\n    \r\n\r\n\r\n    return(\r\n        <Form className={'todo-form'} layout={'inline'} onFinish={finish}>\r\n            <Item name = {'name'} label=\"Name\">\r\n                <Input\r\n                minLength = {3}\r\n                validationMessage = {fieldsValidationMessage} \r\n                />\r\n            </Item>\r\n            <Item name = {'title'} label = \"Title\">\r\n                <Input \r\n                minLength = {3}\r\n                pattern = {\"^[A-Z][A-Za-z]+\"}\r\n                validationMessage = {titlecapValidationmessage}\r\n                />\r\n            </Item>\r\n                <Item name = {'description'} label = \"Description\">\r\n                    <Input \r\n                    minLength = {3}\r\n                    validationMessage = {fieldsValidationMessage}\r\n                    />\r\n                </Item>\r\n\r\n            <Item>\r\n                <Button htmlType = {'submit'}>Add</Button>\r\n            </Item>\r\n\r\n\r\n            \r\n        </Form>\r\n    )\r\n\r\n    \r\n\r\n    \r\n    \r\n}","C:\\Users\\user\\react-todo-app-1\\react-todo-app\\src\\components\\Todoitem.jsx",["42","43"],"import React, { useState} from 'react';\r\nimport {Button, Checkbox } from 'antd';\r\nimport {DeleteFilled} from '@ant-design/icons';\r\nimport { format } from 'date-fns';\r\n\r\n\r\nexport const Todoitem = (props) => {\r\n    const { item, onCheck, onRemove } = props;\r\n\r\n    const check = () =>{\r\n        onCheck(item.id);\r\n    }\r\n\r\n    const Remove = () =>{\r\n        onRemove(item.id);\r\n    }\r\n    \r\n    return(\r\n        \r\n        <li className = \"Todo-item\" key = {item.id}>\r\n            <Checkbox classname = \"checkbox\" checked = {item.checked} onChange= {check} > {item.name}, {item.title}, {item.description}, {item.time}\r\n            </Checkbox>\r\n            <Button style = {{background:\"#f5222d\"}} onClick={Remove} icon = {<DeleteFilled />} ></Button> \r\n        </li>\r\n        \r\n            \r\n    )\r\n    \r\n}",["44","45"],{"ruleId":"46","severity":1,"message":"47","line":10,"column":16,"nodeType":"48","messageId":"49","endLine":10,"endColumn":22},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"46","severity":1,"message":"54","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":25},{"ruleId":"46","severity":1,"message":"55","line":4,"column":10,"nodeType":"48","messageId":"49","endLine":4,"endColumn":16},{"ruleId":"46","severity":1,"message":"56","line":3,"column":10,"nodeType":"48","messageId":"49","endLine":3,"endColumn":16},{"ruleId":"50","replacedBy":"57"},{"ruleId":"52","replacedBy":"58"},{"ruleId":"46","severity":1,"message":"56","line":3,"column":10,"nodeType":"48","messageId":"49","endLine":3,"endColumn":16},{"ruleId":"46","severity":1,"message":"54","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":25},{"ruleId":"46","severity":1,"message":"55","line":4,"column":10,"nodeType":"48","messageId":"49","endLine":4,"endColumn":16},{"ruleId":"50","replacedBy":"59"},{"ruleId":"52","replacedBy":"60"},"no-unused-vars","'Footer' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["61"],"no-negated-in-lhs",["62"],"'useState' is defined but never used.","'format' is defined but never used.","'render' is defined but never used.",["61"],["62"],["61"],["62"],"no-global-assign","no-unsafe-negation"]